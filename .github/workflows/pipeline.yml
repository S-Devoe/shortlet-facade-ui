name: CI/CD pipeline

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      environment:
        description: Choose environment
        required: true
        default: development
        type: choice
        options:
          - development
          - staging
          - production
env:
  NODE_ENV: ${{ inputs.environment || 'development' }}
  PROJECT_ID: shortlet-app-project
  REGION: europe-west3
  KUBERNETES_SECRET: ${{ secrets.KUBERNETES_SECRET }}
  SERVICE_ACCOUNT_KEY: ${{ secrets.SERVICE_ACCOUNT_KEY }}
  GKE_CLUSTER_NAME: shortlet-app-gke-cluster
  # DOCKER ENVs
  DOCKER_REGISTRY_URL: europe-west3-docker.pkg.dev
  DOCKER_REGISTRY_USERNAME: _json_key_base64
  DOCKER_REGISTRY_PASSWORD: ${{ secrets.KUBERNETES_SECRET }}
  DOCKER_IMAGE_URL: europe-west3-docker.pkg.dev/shortlet-app-project/shortlet-app/landing-web
  DOCKER_IMAGE_TAG: ${{ github.sha }}

jobs:
  unit-tests:
    name: Unit Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install -g pnpm
      - run: pnpm install
      - run: pnpm run lint
      - run: pnpm test

  build:
    name: Build
    if: >-
      contains('dev|staging|main|master', github.ref_name) ||
      github.event_name == 'pull_request'
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to private registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY_URL }}
          username: ${{ env.DOCKER_REGISTRY_USERNAME }}
          password: ${{ env.DOCKER_REGISTRY_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true # ${{ github.event_name == 'push' }}
          tags: |
            ${{ env.DOCKER_IMAGE_URL }}:latest
            ${{ env.DOCKER_IMAGE_URL }}:${{ env.DOCKER_IMAGE_TAG }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE_URL }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKER_IMAGE_URL }}:buildcache,mode=max,ignore-error=true

  deploy-dev:
    name: 01 - Deploy development
    if: >-
      (github.event_name == 'push' && github.ref_name == 'dev') ||
      (inputs.environment == 'development')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ env.KUBERNETES_SECRET }}
      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ env.GKE_CLUSTER_NAME }}
          location: ${{ env.REGION }}
      - name: Deploy on the GKE
        run: |-
          sed -i -e 's/latest/'${{ env.DOCKER_IMAGE_TAG }}'/' ./infra/k8s/deployment/development.yml
          kubectl apply -f ./infra/k8s/deployment/development.yml

  deploy-staging:
    name: 02 - Deploy staging
    if: >-
      (github.event_name == 'push' && github.ref_name == 'staging') ||
      (inputs.environment == 'staging')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ env.KUBERNETES_SECRET }}
      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ env.GKE_CLUSTER_NAME }}
          location: ${{ env.REGION }}
      - name: Deploy on the GKE
        run: |-
          sed -i -e 's/latest/'${{ env.DOCKER_IMAGE_TAG }}'/' ./infra/k8s/deployment/staging.yml
          kubectl apply -f ./infra/k8s/deployment/staging.yml

  deploy-prod:
    name: 03 - Deploy production
    if: ${{ inputs.environment == 'production' }}
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ env.KUBERNETES_SECRET }}
      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ env.GKE_CLUSTER_NAME }}
          location: ${{ env.REGION }}
      - name: Deploy on the GKE
        run: |-
          sed -i -e 's/latest/'${{ env.DOCKER_IMAGE_TAG }}'/' ./infra/k8s/deployment/production.yml
          kubectl apply -f ./infra/k8s/deployment/production.yml